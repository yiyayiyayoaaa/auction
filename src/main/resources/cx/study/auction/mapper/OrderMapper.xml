<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cx.study.auction.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="cx.study.auction.pojo.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_num" property="orderNum" jdbcType="VARCHAR" />
    <result column="commodity_id" property="commodityId" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="OrderVoResultMap" type="cx.study.auction.vo.OrderVo" extends="BaseResultMap">
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="commodity_name" property="commodityName" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_num, commodity_id, address, price, pay_time, end_time, status, user_id, 
    start_time, update_time
  </sql>

    <sql id="OrderVo_Column_List" >
        o.id, order_num, o.commodity_id,commodity_name,c.description,o.address, o.price, o.pay_time, o.end_time, o.status, o.user_id,username,phone,
        o.start_time, o.update_time
    </sql>
  <insert id="addOrder" parameterType="cx.study.auction.pojo.Order" >

  </insert>

  <select id="findOrderById" resultMap="OrderVoResultMap">
    SELECT  <include refid="OrderVo_Column_List"/> ,i.url
    FROM `order` o
    LEFT JOIN commodity c ON c.id = o.commodity_id
    LEFT JOIN `user` u ON u.id = o.user_id
    LEFT JOIN commodity_image i ON c.id = i.commodity_id
    WHERE o.id = #{id}
  </select>
    <select id="findOrderByUser" parameterType="cx.study.auction.query.OrderQuery" resultMap="OrderVoResultMap">
      SELECT  <include refid="OrderVo_Column_List"/> ,i.url
      FROM `order` o
      LEFT JOIN commodity c ON c.id = o.commodity_id
      LEFT JOIN `user` u ON u.id = o.user_id AND o.user_id = #{userId}
      LEFT JOIN commodity_image i ON c.id = i.commodity_id
      <if test="status >= 0">
        WHERE o.status = #{status}
      </if>
    </select>

  <select id="findAll" parameterType="cx.study.auction.query.OrderQuery" resultMap="OrderVoResultMap">
      SELECT <include refid="OrderVo_Column_List"/>
      FROM `order` o,commodity c,user u
      WHERE c.id = commodity_id AND u.id = user_id
      <if test="keyWord != null"> AND (username LIKE #{keyWord} OR order_num LIKE #{keyWord})</if>
      <if test="rows != 0">limit #{startRow},#{rows}</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from `order`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from 'order'
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cx.study.auction.pojo.Order" >
    insert into `order` (id, order_num, commodity_id,
      address, price, pay_time, 
      end_time, status, user_id, 
      start_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{orderNum,jdbcType=VARCHAR}, #{commodityId,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{payTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cx.study.auction.pojo.Order" >
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="commodityId != null" >
        commodity_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="commodityId != null" >
        #{commodityId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cx.study.auction.pojo.Order" >
    update `order`
    <set >
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="commodityId != null" >
        commodity_id = #{commodityId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cx.study.auction.pojo.Order" >
    update `order`
    set order_num = #{orderNum,jdbcType=VARCHAR},
      commodity_id = #{commodityId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>